<template>
    <header>
        正则表达式可视化
        <div>
            <input type="radio" name='isString' id='isString' @click='doIsString("yes")' />
            是字符串
            <input type="radio" name='isString' id='notString' @click='doIsString("no")' />
            不是字符串
        </div>
        <a href="https://hai2007.gitee.io/sweethome/#/tool" target="_blank" title='点击我返回工具列表页'>
            工具列表
        </a>
        <a href="https://github.com/hai2007/Regexper-Visualization/issues" target="_blank" title='点击我反馈使用中发现的问题'>
            提Issue或发现问题
        </a>
    </header>
    <div class="input">
        <input type="text" q-model='express' @keydown='doDisplay("input")'>
        <span @click='doDisplay'>显示</span>
    </div>
    <div class="content">
        <canvas id='Regexper-Visualization-Canvas'>非常抱歉，您的浏览器不支持canvas!</canvas>
    </div>
    <div class="help-hidden" id='help-hidden'>
        SD发生的发
    </div>
</template>
<script>

    import QuickPaper from 'quick-paper';
    import regexpToJson from './regexpToJson/index';
    import drawImage from './drawImage/index';
    import Image2D from 'image2d';

    export default {
        data() {
            return {
                express: "",
                isString: "no"
            };
        },
        mounted() {

            // 获取值
            this.express = decodeURIComponent(QuickPaper.urlFormat(window.location.href).params.express || "");

            // 是否是字符串
            this.isString = QuickPaper.urlFormat(window.location.href).params.isString || "no";

            if (this.isString == 'yes') {
                document.getElementById('isString').setAttribute('checked', 'checked');
            } else {
                document.getElementById('notString').setAttribute('checked', 'checked');
            }

            // 绘制
            this.doDraw(this.express);
        },
        methods: {
            reloadPage() {
                window.location.search = "?express=" + encodeURIComponent(this.express) + "&isString=" + this.isString;
            },
            doIsString(_isString) {
                this.isString = _isString;
                this.reloadPage();
            },
            doDisplay(flag, event) {

                // 如果是输入框里面的正常输入
                if (flag == 'input' && event.keyCode != 13) return;

                // 修改地址
                this.reloadPage();
            },
            doDraw(express) {

                let imageData = regexpToJson(express, this.isString == 'yes');

                // 绘制
                drawImage(Image2D('#Regexper-Visualization-Canvas')

                    // 设置画布大小
                    .attr({
                        width: imageData.width + 40,
                        height: imageData.height + 20
                    })

                    // 获取画笔，并进行初步的设置
                    .painter().config({
                        "font-size": 12,
                        textAlign: "center",
                        "font-family": "sans-serif"
                    }), imageData, 20, 10);

            }
        }
    };
</script>
<style>
    [quickpaper] {
        min-width: 700px;

        .help-hidden {
            position: fixed;
            font-size: 12px;
            font-family: sans-serif;
            padding: 0;
            border: none;
            bottom: -100px;
        }

        &>header {
            background-image: url('./assets/logo.png');
            line-height: 50px;
            background-size: auto 40px;
            background-repeat: no-repeat;
            background-color: #efefef;
            background-position: 5px center;
            padding-left: 50px;
            font-weight: 800;
            font-family: serif;
            font-size: 20px;
            color: #97932e;

            &>a {
                float: right;
                background-color: white;
                line-height: 30px;
                font-size: 12px;
                padding: 0 10px;
                color: gray;
                margin-top: 10px;
                margin-right: 10px;

                &:hover {
                    outline: 1px solid gray;
                }
            }

            &>div {
                display: inline-block;
                font-size: 12px;
                margin-left: 50px;

                &>input {
                    margin-left: 20px;
                }
            }
        }

        &>div {
            &.input {
                background-color: #fafafa;
                padding: 10px 0;
                white-space: nowrap;

                &>input,
                &>span {
                    vertical-align: top;
                }

                &>input {
                    height: 40px;
                    width: calc(100vw - 110px);
                    min-width: 590px;
                    margin-left: 10px;
                    padding: 0 10px;
                    outline: none;
                }

                &>span {
                    text-align: center;
                    display: inline-block;
                    width: 80px;
                    line-height: 40px;
                    margin: 0 10px;
                    background-color: #97932e;
                    color: #fefefe;
                    cursor: pointer;

                    &:hover {
                        outline: 1px solid #97932e;
                    }
                }

            }

            &.content {
                min-height: calc(100vh - 110px);
                text-align: center;
                padding: 10px;
                padding-top: 0;
                background-color: #fafafa;

                &>canvas {
                    background-color: white;
                }

            }
        }
    }
</style>
